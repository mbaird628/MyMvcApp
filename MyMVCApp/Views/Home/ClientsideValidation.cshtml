@model MyMVCApp.Models.DataValidation
@using System.Xml.Linq

@{
    ViewBag.Title = "Clientside Validation";
}


@section Footer
{
    <p>
        @Html.ActionLink("Back to home", "Index")
    </p>
}

@section Title
{
    @ViewBag.Title
}

<p>
    By default clientside validation is set to true in "Web.config" as shown below. Both 'ClientValidationEnable' and 'UnobtrusiveJavaScriptEnabled' must be set to true. If these flags are set to false the validation will occur on the server.
</p>
<p>
   <b>Note:</b> When you are performing serverside validation you should check the state of the model using "ModelState.IsValid".
</p>
@{
    // This needs to go into the repository.
    var xml = "<appSettings><add key='ClientValidationEnabled' value='true' /><add key='UnobtrusiveJavaScriptEnabled' value='true' /></appSettings>";
}
@CustomHtmlHelpers.EncodeAndFormatXmlForDisplayStatic(xml, new { @style = "border-color:grey;background:white" })

<p>This page uses <a href="https://www.nuget.org/packages/jQuery.Validation.Unobtrusive/">jquery.validate.unobtrusive.js</a>.</p>
<p>If you would like to use Bootstrap tooltips for error messages you can use <a href="https://johnnyreilly.github.io/jQuery.Validation.Unobtrusive.Native/Demo.html" target="_blank"> jquery.validate.unobtrusive.native</a></p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <p class="col-lg-offset-2 col-md-10">
                    <img src="~/Content/StringLength.png" />
                </p>
            </div>
            @Html.LabelFor(model => model.StringLengthValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StringLengthValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StringLengthValidation, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <p class="col-lg-offset-2 col-md-10">
                    <img src="~/Content/StringLengthRange.png" />
                </p>
            </div>
            @Html.LabelFor(model => model.StringRangeValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StringRangeValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StringRangeValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <p class="col-lg-offset-2 col-md-8">
                    <img src="~/Content/PhoneNumber.png" />
                </p>
            </div>
            @Html.LabelFor(model => model.PhoneNumberValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumberValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumberValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <p class="col-lg-offset-2 col-md-8">

                    <img src="~/Content/Required.png" />
                </p>
            </div>
            @Html.LabelFor(model => model.RequiredValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequiredValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequiredValidation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <p class="col-lg-offset-2 col-md-8">
                    <img src="~/Content/EmailAddress.png" />
                </p>
            </div>
            @Html.LabelFor(model => model.EmailValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <p class="col-lg-offset-2 col-md-8">
                    <img src="~/Content/ConfirmEmail.png" />
                </p>
            </div>
            @Html.LabelFor(model => model.ConfirmationEmailValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmationEmailValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmationEmailValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <p class="col-lg-offset-2 col-md-8">
                    <img src="~/Content/NumberRange.png" />
                </p>
            </div>
            @Html.LabelFor(model => model.NumberRangeValidation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberRangeValidation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberRangeValidation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


